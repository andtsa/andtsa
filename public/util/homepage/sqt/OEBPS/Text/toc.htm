<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
      lang="en"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Effective Software Testing</title>
<link rel="stylesheet" type="text/css" href="../../override_v1.css"/>
<link rel="stylesheet" type="text/css" href="../../stylesheet.css"/><link rel="stylesheet" type="text/css" href="../../page_styles.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content" class="calibre"><h1 class="tochead" id="heading_id_2"><a id="pgfId-857980"></a>contents</h1>

  <p class="fm-head-2toc">  </p>

  <p class="tocchapters"><a id="pgfId-857376"></a><a class="index" href="../Text/fm.htm">Front matter</a></p>

  <p class="fm-head-1toc"><a class="index" href="../Text/fm.htm#pgfId-1019606">forewords</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857378"></a><a class="index" href="../Text/fm.htm#pgfId-1019628">preface</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857380"></a><a class="index" href="../Text/fm.htm#pgfId-1019644">acknowledgments</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857382"></a><a class="index" href="../Text/fm.htm#pgfId-1019659">about this book</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857394"></a><a class="index" href="../Text/fm.htm#pgfId-1019694">about the author</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857396"></a><a class="index" href="../Text/fm.htm#pgfId-1019700">about the cover illustration</a></p>

  <p class="fm-head-2toc">  </p>

  <p class="tocchapters">  1 <a id="pgfId-857398"></a><a class="index" href="../Text/01.htm#pgfId-1039349">Effective and systematic software testing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857400"></a>1.1  <a class="index" href="../Text/01.htm#pgfId-1011861">Developers who test vs. developers who do not</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857402"></a>1.2  <a class="index" href="../Text/01.htm#pgfId-1036027">Effective software testing for developers</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857404"></a><a class="index" href="../Text/01.htm#pgfId-1036160">Effective testing in the development process</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036429">Effective testing as an iterative process</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036466">Focusing on development and then on testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036520">The myth of “correctness by design”</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036572">The cost of testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036637">The meaning of effective and systematic</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036725">The role of test automation</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857418"></a>1.3  <a class="index" href="../Text/01.htm#pgfId-1036802">Principles of software testing (or, why testing is so difficult)</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857420"></a><a class="index" href="../Text/01.htm#pgfId-1036848">Exhaustive testing is impossible</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036914">Knowing when to stop testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036941">Variability is important (the pesticide paradox)</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1036993">Bugs happen in some places more than others</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037050">No matter what testing you do, it will never be perfect or enough</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037108">Context is king</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037145">Verification is not validation</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857434"></a>1.4  <a class="index" href="../Text/01.htm#pgfId-1037212">The testing pyramid, and where we should focus</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857436"></a><a class="index" href="../Text/01.htm#pgfId-1037274">Unit testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037473">Integration testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037572">System testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037735">When to use each test level</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037798">Why do I favor unit tests?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037826">What do I test at the different levels?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1037922">What if you disagree with the testing pyramid?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/01.htm#pgfId-1038185">Will this book help you find all the bugs?</a></p>

  <p class="tocchapters">  2 <a id="pgfId-857456"></a><a class="index" href="../Text/02.htm#pgfId-1024625">Specification-based testing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857458"></a>2.1  <a class="index" href="../Text/02.htm#pgfId-1011841">The requirements say it all</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857460"></a><a class="index" href="../Text/02.htm#pgfId-1013044">Step 1: Understanding the requirements, inputs, and outputs</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1013242">Step 2: Explore what the program does for various inputs</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1013666">Step 3: Explore possible inputs and outputs, and identify partitions</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1014508">Step 4: Analyze the boundaries</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1014904">Step 5: Devise test cases</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1016550">Step 6: Automate the test cases</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1017742">Step 7: Augment the test suite with creativity and experience</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857474"></a>2.2  <a class="index" href="../Text/02.htm#pgfId-1018196">Specification-based testing in a nutshell</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857476"></a>2.3  <a class="index" href="../Text/02.htm#pgfId-1018441">Finding bugs with specification testing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857478"></a>2.4  <a class="index" href="../Text/02.htm#pgfId-1022032">Specification-based testing in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857480"></a><a class="index" href="../Text/02.htm#pgfId-1022051">The process should be iterative, not sequential</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022073">How far should specification testing go?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022095">Partition or boundary? It does not matter!</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022126">On and off points are enough, but feel free to add in and out points</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022157">Use variations of the same input to facilitate understanding</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022190">When the number of combinations explodes, be pragmatic</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022234">When in doubt, go for the simplest input</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022267">Pick reasonable values for inputs you do not care about</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022294">Test for nulls and exceptional cases, but only when it makes sense</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022331">Go for parameterized tests when tests have the same skeleton</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022374">Requirements can be of any granularity</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1022402">How does this work with classes and state?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/02.htm#pgfId-1023184">The role of experience and creativity</a></p>

  <p class="tocchapters">  3 <a id="pgfId-857510"></a><a class="index" href="../Text/03.htm#pgfId-1024036">Structural testing and code coverage</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857512"></a>3.1  <a class="index" href="../Text/03.htm#pgfId-1011856">Code coverage, the right way</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857514"></a>3.2  <a class="index" href="../Text/03.htm#pgfId-1012994">Structural testing in a nutshell</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857516"></a>3.3  <a class="index" href="../Text/03.htm#pgfId-1013239">Code coverage criteria</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857518"></a><a class="index" href="../Text/03.htm#pgfId-1013480">Line coverage</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1013517">Branch coverage</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1013687">Condition + branch coverage</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1013957">Path coverage</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857526"></a>3.4  <a class="index" href="../Text/03.htm#pgfId-1014056">Complex conditions and the MC/DC coverage criterion</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857528"></a><a class="index" href="../Text/03.htm#pgfId-1014113">An abstract example</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1014640">Creating a test suite that achieves MC/DC</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-859441"></a>3.5  <a class="index" href="../Text/03.htm#pgfId-1016476">Handling loops and similar constructs</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857534"></a>3.6  <a class="index" href="../Text/03.htm#pgfId-1016620">Criteria subsumption, and choosing a criterion</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857536"></a>3.7  <a class="index" href="../Text/03.htm#pgfId-1016733">Specification-based and structural testing: A running example</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857538"></a>3.8  <a class="index" href="../Text/03.htm#pgfId-1019036">Boundary testing and structural testing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857540"></a>3.9  <a class="index" href="../Text/03.htm#pgfId-1019257">Structural testing alone often is not enough</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857542"></a>3.10 <a class="index" href="../Text/03.htm#pgfId-1020163">Structural testing in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857544"></a><a class="index" href="../Text/03.htm#pgfId-1020179">Why do some people hate code coverage?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1020358">What does it mean to achieve 100% coverage?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1020706">What coverage criterion to use</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1020780">MC/DC when expressions are too complex and cannot be simplified</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1021060">Other coverage criteria</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/03.htm#pgfId-1021110">What should not be covered?</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857556"></a>3.11 <a class="index" href="../Text/03.htm#pgfId-1021436">Mutation testing</a></p>

  <p class="tocchapters">  4 <a id="pgfId-857562"></a><a class="index" href="../Text/04.htm#pgfId-1030693">Designing contracts</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857564"></a>4.1  <a class="index" href="../Text/04.htm#pgfId-1011882">Pre-conditions and post-conditions</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857566"></a><a class="index" href="../Text/04.htm#pgfId-1012424">The assert keyword</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1012831">Strong and weak pre- and post-conditions</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857570"></a>4.2  <a class="index" href="../Text/04.htm#pgfId-1013268">Invariants</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857572"></a>4.3  <a class="index" href="../Text/04.htm#pgfId-1015250">Changing contracts, and the Liskov substitution principle</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857574"></a><a class="index" href="../Text/04.htm#pgfId-1015567">Inheritance and contracts</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857576"></a>4.4  <a class="index" href="../Text/04.htm#pgfId-1016011">How is design-by-contract related to testing?</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857578"></a>4.5  <a class="index" href="../Text/04.htm#pgfId-1016099">Design-by-contract in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857580"></a><a class="index" href="../Text/04.htm#pgfId-1016115">Weak or strong pre-conditions?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1016160">Input validation, contracts, or both?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1016735">Asserts and exceptions: When to use one or the other</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1016959">Exception or soft return values?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1017040">When not to use design-by-contract</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1017073">Should we write tests for pre-conditions, post-conditions, and invariants?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/04.htm#pgfId-1017141">Tooling support</a></p>

  <p class="tocchapters">  5 <a id="pgfId-857598"></a><a class="index" href="../Text/05.htm#pgfId-1030033">Property-based testing</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857600"></a>5.1  <a class="index" href="../Text/05.htm#pgfId-1011836">Example 1: The passing grade program</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857602"></a>5.2  <a class="index" href="../Text/05.htm#pgfId-1020237">Example 2: Testing the unique method</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857604"></a>5.3  <a class="index" href="../Text/05.htm#pgfId-1021081">Example 3: Testing the indexOf method</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857606"></a>5.4  <a class="index" href="../Text/05.htm#pgfId-1024277">Example 4: Testing the Basket class</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857608"></a>5.5  <a class="index" href="../Text/05.htm#pgfId-1028011">Example 5: Creating complex domain objects</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857610"></a>5.6  <a class="index" href="../Text/05.htm#pgfId-1028771">Property-based testing in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857612"></a><a class="index" href="../Text/05.htm#pgfId-1028787">Example-based testing vs. property-based testing</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/05.htm#pgfId-1028821">Common issues in property-based tests</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/05.htm#pgfId-1029228">Creativity is key</a></p>

  <p class="tocchapters">  6 <a id="pgfId-857622"></a><a class="index" href="../Text/06.htm#pgfId-1023813">Test doubles and mocks</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857624"></a>6.1  <a class="index" href="../Text/06.htm#pgfId-1012133">Dummies, fakes, stubs, spies, and mocks</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857626"></a><a class="index" href="../Text/06.htm#pgfId-1012149">Dummy objects</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1012254">Fake objects</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1012294">Stubs</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1012352">Mocks</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1012413">Spies</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857636"></a>6.2  <a class="index" href="../Text/06.htm#pgfId-1012448">An introduction to mocking frameworks</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857638"></a><a class="index" href="../Text/06.htm#pgfId-1012621">Stubbing dependencies</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1014696">Mocks and expectations</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1016399">Capturing arguments</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1018228">Simulating exceptions</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857646"></a>6.3  <a class="index" href="../Text/06.htm#pgfId-1019061">Mocks in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857648"></a><a class="index" href="../Text/06.htm#pgfId-1019083">The disadvantages of mocking</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1019438">What to mock and what not to mock</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1021145">Date and time wrappers</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1022228">Mocking types you do not own</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/06.htm#pgfId-1022456">What do others say about mocking?</a></p>

  <p class="tocchapters">  7 <a id="pgfId-857662"></a><a class="index" href="../Text/07.htm#pgfId-1020533">Designing for testability</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857664"></a>7.1  <a class="index" href="../Text/07.htm#pgfId-1011866">Separating infrastructure code from domain code</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857666"></a>7.2  <a class="index" href="../Text/07.htm#pgfId-1014388">Dependency injection and controllability</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857668"></a>7.3  <a class="index" href="../Text/07.htm#pgfId-1015113">Making your classes and methods observable</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857670"></a><a class="index" href="../Text/07.htm#pgfId-1015175">Example 1: Introducing methods to facilitate assertions</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1015779">Example 2: Observing the behavior of void methods</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857674"></a>7.4  <a class="index" href="../Text/07.htm#pgfId-1017486">Dependency via class constructor or value via method parameter?</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857676"></a>7.5  <a class="index" href="../Text/07.htm#pgfId-1018787">Designing for testability in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857678"></a><a class="index" href="../Text/07.htm#pgfId-1018911">The cohesion of the class under test</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1019011">The coupling of the class under test</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1019123">Complex conditions and testability</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1019160">Private methods and testability</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1019193">Static methods, singletons, and testability</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1019252">The Hexagonal Architecture and mocks as a design technique</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/07.htm#pgfId-1019285">Further reading about designing for testability</a></p>

  <p class="tocchapters">  8 <a id="pgfId-857696"></a><a class="index" href="../Text/08.htm#pgfId-1017483">Test-driven development</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857698"></a>8.1  <a class="index" href="../Text/08.htm#pgfId-1011818">Our first TDD session</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857700"></a>8.2  <a class="index" href="../Text/08.htm#pgfId-1015757">Reflecting on our first TDD experience</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857702"></a>8.3  <a class="index" href="../Text/08.htm#pgfId-1016004">TDD in the real world</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857704"></a><a class="index" href="../Text/08.htm#pgfId-1016026">To TDD or not to TDD?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/08.htm#pgfId-1016063">TDD 100% of the time?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/08.htm#pgfId-1016146">Does TDD work for all types of applications and domains?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/08.htm#pgfId-1016190">What does the research say about TDD?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/08.htm#pgfId-1016352">Other schools of TDD</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/08.htm#pgfId-1016468">TDD and proper testing</a></p>

  <p class="tocchapters">  9 <a id="pgfId-857720"></a><a class="index" href="../Text/09.htm#pgfId-1072771">Writing larger tests</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857722"></a>9.1  <a class="index" href="../Text/09.htm#pgfId-1011802">When to use larger tests</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857724"></a><a class="index" href="../Text/09.htm#pgfId-1011868">Testing larger components</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1015652">Testing larger components that go beyond our code base</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857728"></a>9.2  <a class="index" href="../Text/09.htm#pgfId-1022945">Database and SQL testing</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857730"></a><a class="index" href="../Text/09.htm#pgfId-1022973">What to test in a SQL query</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1023644">Writing automated tests for SQL queries</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1026277">Setting up infrastructure for SQL tests</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1026879">Best practices</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857738"></a>9.3  <a class="index" href="../Text/09.htm#pgfId-1027032">System tests</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857740"></a><a class="index" href="../Text/09.htm#pgfId-1027097">An introduction to Selenium</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1028666">Designing page objects</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1032258">Patterns and best practices</a></p>

  <p class="fm-head-1toc">  <a id="pgfId-857746"></a>9.4  <a class="index" href="../Text/09.htm#pgfId-1033376">Final notes on larger tests</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857748"></a><a class="index" href="../Text/09.htm#pgfId-1033392">How do all the testing techniques fit?</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1033421">Perform cost/benefit analysis</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1033461">Be careful with methods that are covered but not tested</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1033524">Proper code infrastructure is key</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1033546">DSLs and tools for stakeholders to write tests</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/09.htm#pgfId-1033570">Testing other types of web systems</a></p>

  <p class="tocchapters">10 <a id="pgfId-857764"></a><a class="index" href="../Text/10.htm#pgfId-1027261">Test code quality</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857766"></a>10.1  <a class="index" href="../Text/10.htm#pgfId-1011830">Principles of maintainable test code</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857768"></a><a class="index" href="../Text/10.htm#pgfId-1011849">Tests should be fast</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1011917">Tests should be cohesive, independent, and isolated</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1011977">Tests should have a reason to exist</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1012009">Tests should be repeatable and not flaky</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1013080">Tests should have strong assertions</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1013202">Tests should break if the behavior changes</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1013230">Tests should have a single and clear reason to fail</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1013258">Tests should be easy to write</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1013298">Tests should be easy to read</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1021231">Tests should be easy to change and evolve</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857788"></a>10.2  <a class="index" href="../Text/10.htm#pgfId-1021267">Test smells</a></p>

  <p class="fm-head-2toc"><a id="pgfId-857790"></a><a class="index" href="../Text/10.htm#pgfId-1021384">Excessive duplication</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1021418">Unclear assertions</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1021480">Bad handling of complex or external resources</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1021545">Fixtures that are too general</a></p>

  <p class="fm-head-2toc"><a class="index" href="../Text/10.htm#pgfId-1021595">Sensitive assertions</a></p>

  <p class="tocchapters">11 <a id="pgfId-857804"></a><a class="index" href="../Text/11.htm#pgfId-1020375">Wrapping up the book</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857806"></a>11.1  <a class="index" href="../Text/11.htm#pgfId-1011780">Although the model looks linear, iterations are fundamental</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857808"></a>11.2  <a class="index" href="../Text/11.htm#pgfId-1011849">Bug-free software development: Reality or myth?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857810"></a>11.3  <a class="index" href="../Text/11.htm#pgfId-1011910">Involve your final user</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857812"></a>11.4  <a class="index" href="../Text/11.htm#pgfId-1011964">Unit testing is hard in practice</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857814"></a>11.5  <a class="index" href="../Text/11.htm#pgfId-1012258">Invest in monitoring</a></p>

  <p class="fm-head-1toc"><a id="pgfId-857816"></a>11.6  <a class="index" href="../Text/11.htm#pgfId-1012292">What’s next?</a></p>

  <p class="fm-head-2toc">  </p>

  <p class="tocchapters">Appendix. <a id="pgfId-857818"></a><a class="index" href="../Text/A.htm#pgfId-1041682">Answers to exercises</a></p>

  <p class="fm-head-2toc">  </p>

  <p class="tocchapters"><a id="pgfId-857840"></a><a class="index" href="../Text/References.htm#pgfId-1044071">References</a></p>

  <p class="fm-head-2toc">  </p>

  <p class="tocchapters"><a id="pgfId-857842"></a><a class="index" href="../Text/index.htm#pgfId-151076">index</a></p>
</div>
</div>
</body>
</html>